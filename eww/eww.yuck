(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
		(metric :label {getmuted == "true" ? "婢" : "墳"}
	    :onclick "amixer sset Master toggle"
            :value volume
						:class "font-icon"
            :onchange "amixer -D pulse sset Master {}%")
    (metric :label ""
            :value {EWW_RAM.used_mem_perc}
						:class "font-icon"
            :onchange "")
    ;(metric :label "﫭"
		;				:class "font-icon"
    ;        :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
    ;        :onchange "")
    time
		(button :width 14 :class {getdnd == "true" ? "dnd" : "disturb"} :onclick "dunstctl set-paused false" "")
		(button :width 14 :class {getresizing == "true" ? "dnd" : "disturb"} "")
	)
)

(defwidget workspaces []
	(box
  (box :class "workspaces"
			 :onscroll "notify-send scroll {}"
       :orientation "h"
       :space-evenly false
       :halign "start"
			 :valgn "center"
       :spacing 10
    (button :class {gworkspace == "1" ? "workspace-highlight" : ""} :onclick "i3-msg workspace 1" 1)
    (button :class {gworkspace == "2" ? "workspace-highlight" : ""} :onclick "i3-msg workspace 2" 2)
    (button :class {gworkspace == "3" ? "workspace-highlight" : ""} :onclick "i3-msg workspace 3" 3)
    (button :class {gworkspace == "4" ? "workspace-highlight" : ""} :onclick "i3-msg workspace 4" 4)
    (button :class {gworkspace == "5" ? "workspace-highlight" : ""} :onclick "i3-msg workspace 5" 5)
    (button :class {gworkspace == "6" ? "workspace-highlight" : ""} :onclick "i3-msg workspace 6" 6)
    (button :class {gworkspace == "7" ? "workspace-highlight" : ""} :onclick "i3-msg workspace 7" 7)
    (button :class {gworkspace == "8" ? "workspace-highlight" : ""} :onclick "i3-msg workspace 8" 8)
    (button :class {gworkspace == "9" ? "workspace-highlight" : ""} :onclick "i3-msg workspace 9" 9)
    (button :class {gworkspace == "0" ? "workspace-highlight" : ""} :onclick "i3-msg workspace 0" 0)
	)))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
		(button :class "next"
						:onclick "playerctl previous"
						{"玲"})
    {music != "" ? " ${music}" : ""}
		(button :class "next"
						:onclick "playerctl next"
						{"怜"}))
)


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (button :onclick "amixer sset Master toggle" :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(defpoll getdnd :interval "50ms"
	"scripts/getdnd")

(defpoll getresizing :interval "250ms"
	"scripts/resizing")

(defpoll getmuted :interval "50ms"
	"scripts/getmuted")

(defpoll gworkspace :interval "50ms"
	"scripts/getworkspace")

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "1s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "90%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))
